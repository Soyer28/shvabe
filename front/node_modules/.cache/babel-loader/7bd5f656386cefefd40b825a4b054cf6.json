{"ast":null,"code":"import http from \"../http-common\";\n\nclass UserDataService {\n  login(name, password) {\n    return http.get(`/auth/login?name=${name}&password=${password}`);\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByName(name) {\n    return http.get(`/users?name=${name}`);\n  }\n\n}\n\nexport default new UserDataService();","map":{"version":3,"sources":["/Users/semennasekin/Documents/GitHub/shvabe/front/src/services/user.service.js"],"names":["http","UserDataService","login","name","password","get","getAll","id","create","data","post","update","put","delete","deleteAll","findByName"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,KAAK,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACpB,WAAOJ,IAAI,CAACK,GAAL,CAAU,oBAAmBF,IAAK,aAAYC,QAAS,EAAvD,CAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAON,IAAI,CAACK,GAAL,CAAS,QAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACE,EAAD,EAAK;AACN,WAAOP,IAAI,CAACK,GAAL,CAAU,UAASE,EAAG,EAAtB,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAOT,IAAI,CAACU,IAAL,CAAU,QAAV,EAAoBD,IAApB,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACJ,EAAD,EAAKE,IAAL,EAAW;AACf,WAAOT,IAAI,CAACY,GAAL,CAAU,UAASL,EAAG,EAAtB,EAAyBE,IAAzB,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAK;AACT,WAAOP,IAAI,CAACa,MAAL,CAAa,UAASN,EAAG,EAAzB,CAAP;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,WAAOd,IAAI,CAACa,MAAL,CAAa,QAAb,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACZ,IAAD,EAAO;AACf,WAAOH,IAAI,CAACK,GAAL,CAAU,eAAcF,IAAK,EAA7B,CAAP;AACD;;AA/BmB;;AAkCtB,eAAe,IAAIF,eAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass UserDataService {\n  login(name, password) {\n    return http.get(`/auth/login?name=${name}&password=${password}`)\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByName(name) {\n    return http.get(`/users?name=${name}`);\n  }\n}\n\nexport default new UserDataService();"]},"metadata":{},"sourceType":"module"}