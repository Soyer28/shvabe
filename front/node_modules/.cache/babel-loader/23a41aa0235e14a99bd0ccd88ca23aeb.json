{"ast":null,"code":"import http from \"../http-common\";\n\nclass TutorialDataService {\n  login(data) {\n    return http.put(`/users`, data);\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n\n}\n\nexport default new TutorialDataService();","map":{"version":3,"sources":["/Users/semennasekin/Documents/GitHub/shvabe/front/src/services/tutorial.service.js"],"names":["http","TutorialDataService","login","data","put","getAll","get","id","create","post","update","delete","deleteAll","findByTitle","title"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,WAAOH,IAAI,CAACI,GAAL,CAAU,QAAV,EAAmBD,IAAnB,CAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAOL,IAAI,CAACM,GAAL,CAAS,QAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAK;AACN,WAAOP,IAAI,CAACM,GAAL,CAAU,UAASC,EAAG,EAAtB,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACL,IAAD,EAAO;AACX,WAAOH,IAAI,CAACS,IAAL,CAAU,QAAV,EAAoBN,IAApB,CAAP;AACD;;AAEDO,EAAAA,MAAM,CAACH,EAAD,EAAKJ,IAAL,EAAW;AACf,WAAOH,IAAI,CAACI,GAAL,CAAU,UAASG,EAAG,EAAtB,EAAyBJ,IAAzB,CAAP;AACD;;AAEDQ,EAAAA,MAAM,CAACJ,EAAD,EAAK;AACT,WAAOP,IAAI,CAACW,MAAL,CAAa,UAASJ,EAAG,EAAzB,CAAP;AACD;;AAEDK,EAAAA,SAAS,GAAG;AACV,WAAOZ,IAAI,CAACW,MAAL,CAAa,QAAb,CAAP;AACD;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,WAAOd,IAAI,CAACM,GAAL,CAAU,gBAAeQ,KAAM,EAA/B,CAAP;AACD;;AA/BuB;;AAkC1B,eAAe,IAAIb,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass TutorialDataService {\n  login(data) {\n    return http.put(`/users`, data)\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();"]},"metadata":{},"sourceType":"module"}