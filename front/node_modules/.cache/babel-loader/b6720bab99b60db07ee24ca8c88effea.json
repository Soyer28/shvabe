{"ast":null,"code":"var _jsxFileName = \"/Users/semennasekin/Documents/GitHub/shvabe/front/src/components/user.component.js\";\nimport React, { Component } from \"react\";\nimport UserDataService from \"../services/user.service\";\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.state = {\n      currentUser: {\n        id: null,\n        name: \"\",\n        password: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getUser(this.props.match.params.id);\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentUser: { ...prevState.currentUser,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangePassword(e) {\n    const password = e.target.value;\n    this.setState(prevState => ({\n      currentUser: { ...prevState.currentUser,\n        password: password\n      }\n    }));\n  }\n\n  getUser(id) {\n    UserDataService.get(id).then(response => {\n      this.setState({\n        currentUser: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished() {\n    var data = {\n      id: this.state.currentUser.id,\n      name: this.state.currentUser.name,\n      password: this.state.currentUser.password\n    };\n    UserDataService.update(this.state.currentUser.id, data).then(response => {\n      this.setState(prevState => ({\n        currentUser: { ...prevState.currentUser\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateUser() {\n    UserDataService.update(this.state.currentUser.id, this.state.currentUser).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The tutorial was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteUser() {\n    UserDataService.delete(this.state.currentUser.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/tutorials');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, currentUser ? React.createElement(\"div\", {\n      className: \"edit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"name\",\n      value: currentUser.name,\n      onChange: this.onChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"password\",\n      value: currentUser.password,\n      onChange: this.onChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"badge badge-danger mr-2\",\n      onClick: this.deleteUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"badge badge-success\",\n      onClick: this.updateUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.message)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Please click on a User...\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/semennasekin/Documents/GitHub/shvabe/front/src/components/user.component.js"],"names":["React","Component","UserDataService","User","constructor","props","onChangeName","bind","onChangePassword","getUser","updatePublished","updateUser","deleteUser","state","currentUser","id","name","password","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UserDataService from \"../services/user.service\";\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n\n    this.state = {\n      currentUser: {\n        id: null,\n        name: \"\",\n        password: \"\",\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getUser(this.props.match.params.id);\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentUser: {\n          ...prevState.currentUser,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangePassword(e) {\n    const password = e.target.value;\n    \n    this.setState(prevState => ({\n      currentUser: {\n        ...prevState.currentUser,\n        password: password\n      }\n    }));\n  }\n\n  getUser(id) {\n    UserDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentUser: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished() {\n    var data = {\n      id: this.state.currentUser.id,\n      name: this.state.currentUser.name,\n      password: this.state.currentUser.password,\n    };\n\n    UserDataService.update(this.state.currentUser.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentUser: {\n            ...prevState.currentUser,\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateUser() {\n    UserDataService.update(\n      this.state.currentUser.id,\n      this.state.currentUser\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The tutorial was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteUser() {    \n    UserDataService.delete(this.state.currentUser.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/tutorials')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div>\n        {currentUser ? (\n          <div className=\"edit-form\">\n            <h4>User</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={currentUser.name}\n                  onChange={this.onChangeName}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  value={currentUser.password}\n                  onChange={this.onChangePassword}\n                />\n              </div>\n\n            </form>\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteUser}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateUser}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a User...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}