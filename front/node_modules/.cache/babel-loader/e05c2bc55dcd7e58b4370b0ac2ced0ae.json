{"ast":null,"code":"import http from \"../http-common\";\n\nclass TutorialDataService {\n  login(name, password) {\n    return http.post(`/users?name=${name}&password=${password}`);\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n\n}\n\nexport default new TutorialDataService();","map":{"version":3,"sources":["/Users/semennasekin/Documents/GitHub/shvabe/front/src/services/tutorial.service.js"],"names":["http","TutorialDataService","login","name","password","post","getAll","get","id","create","data","update","put","delete","deleteAll","findByTitle","title"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,KAAK,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACpB,WAAOJ,IAAI,CAACK,IAAL,CAAW,eAAcF,IAAK,aAAYC,QAAS,EAAnD,CAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAON,IAAI,CAACO,GAAL,CAAS,QAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAK;AACN,WAAOR,IAAI,CAACO,GAAL,CAAU,UAASC,EAAG,EAAtB,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAOV,IAAI,CAACK,IAAL,CAAU,QAAV,EAAoBK,IAApB,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACH,EAAD,EAAKE,IAAL,EAAW;AACf,WAAOV,IAAI,CAACY,GAAL,CAAU,UAASJ,EAAG,EAAtB,EAAyBE,IAAzB,CAAP;AACD;;AAEDG,EAAAA,MAAM,CAACL,EAAD,EAAK;AACT,WAAOR,IAAI,CAACa,MAAL,CAAa,UAASL,EAAG,EAAzB,CAAP;AACD;;AAEDM,EAAAA,SAAS,GAAG;AACV,WAAOd,IAAI,CAACa,MAAL,CAAa,QAAb,CAAP;AACD;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,WAAOhB,IAAI,CAACO,GAAL,CAAU,gBAAeS,KAAM,EAA/B,CAAP;AACD;;AA/BuB;;AAkC1B,eAAe,IAAIf,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass TutorialDataService {\n  login(name, password) {\n    return http.post(`/users?name=${name}&password=${password}`)\n  }\n\n  getAll() {\n    return http.get(\"/users\");\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();"]},"metadata":{},"sourceType":"module"}